1，引入依赖
<dependency>
   <groupId>io.springfox</groupId>
   <artifactId>springfox-swagger2</artifactId>
   <version>2.2.2</version>
</dependency>
<dependency>
   <groupId>io.springfox</groupId>
   <artifactId>springfox-swagger-ui</artifactId>
   <version>2.2.2</version>
</dependency>
2，注解
1，在启动类加入注解，来启动Swagger：@EnableSwagger2
2，编写一个Swagger的配置类
@Configuration
public class SwaggerConfig {
    @Bean
    public Docket createRestApi() {
        return new Docket(DocumentationType.SWAGGER_2)
                .apiInfo(apiInfo())
                .select()
                .apis(RequestHandlerSelectors.basePackage("com.qianfeng.swagger.controller"))
                .paths(PathSelectors.any())
                .build();
    }
    private ApiInfo apiInfo() {
        return new ApiInfoBuilder()
                .title("SpringBoot使用Swagger2构建RESTfulAPI文档")
                .description("想学习更多，请关注钊哥大牛养成记")
                .termsOfServiceUrl("http://www.baidu.com")
                .contact("Java666")
                .version("1.0")
                .build();
    }
}
3，编写Controller，在Controller中的方法加入swagger的注解即可
@RestController
@RequestMapping("user")
public class UserController {
    @ApiOperation(value="创建用户", notes="根据User对象创建用户")
    @ApiImplicitParam(name = "user", value = "用户对象user", required = true, dataType = "User")
    @RequestMapping(value="", method=RequestMethod.POST)
    public String postUser(@RequestBody User user) {
        System.out.println(user);
        return "success";
    }
    //paramType="path" 否则默认参数会从body获取
    @ApiOperation(value="删除用户", notes="根据url的id来指定删除用户")
    @ApiImplicitParam(name = "id", value = "用户ID", required = true, dataType = "Integer",paramType="path")
    @RequestMapping(value="/{id}", method=RequestMethod.DELETE)
    public String delById(@PathVariable Integer id) {
        System.out.println("删除用户，id为："+id);
        return "success";
    }
    @ApiOperation(value="更新用户详细信息", notes="根据传过来的user信息来更新用户详细信息")
    @ApiImplicitParams({
            @ApiImplicitParam(name = "user", value = "用户详细实体user", required = true, dataType = "User")
    })
    @RequestMapping(value="", method=RequestMethod.PUT)
    public String putUser(@RequestBody User user) {
        System.out.println(user);
        return "success";
    }
    @ApiOperation(value="根据ID获取用户信息", notes="")
    @ApiImplicitParam(name = "id", value = "用户ID", required = true, dataType = "Integer",paramType="path")
    @RequestMapping(value = "/{id}",method = RequestMethod.GET)
    public User getById(@PathVariable("id") Integer id){
        return new User(id,"zhangsan",new Date());
    }
    @RequestMapping(value = "list",method = RequestMethod.GET)
    @ApiOperation(value="获取用户列表", notes="")
    public List<User> list(){
        List<User> list = new ArrayList<>();
        list.add(new User(1,"zhangsan",new Date()));
        list.add(new User(2,"lisi",new Date()));
        return list;
    }
}
3，启动服务，访问地址
访问地址：http://localhost:8080/swagger-ui.html
